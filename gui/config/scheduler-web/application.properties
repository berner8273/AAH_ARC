web.max-file-size=50MB
max.threads = 32

scheduler.labels=main
scheduler.filesystem.listener.enabled=false
scheduler.filesystem.listener.time.resolution=1000

# disable spring banner
# spring.main.banner-mode=off

# disable spring features
spring.jmx.enabled=false

# jdbc
jdbc.url=jdbc:oracle:thin:@#{aptitudeDatabaseHost}:1521/#{aptitudeDatabaseServiceName}
jdbc.username=#{scheduler_uiUsername}
jdbc.password=###(scheduler_uiPassword)###
jdbc.connection-timeout=60000
jdbc.connection-pool-size=32

security.username=#{security_uiUsername}
security.password=###(security_uiPassword)###
security.authenticationType=db


spring.scheduler.datasource.url=${jdbc.url}
spring.scheduler.datasource.username=${jdbc.username}
spring.scheduler.datasource.password=${jdbc.password}
spring.scheduler.datasource.driver-class-name=oracle.jdbc.OracleDriver
spring.scheduler.datasource.connectionProperties=oracle.net.disableOob=true
spring.scheduler.datasource.dbcp2.max-wait-millis=${jdbc.connection-timeout}
spring.scheduler.datasource.dbcp2.max-total=${jdbc.connection-pool-size}
spring.scheduler.datasource.dbcp2.max-idle=${jdbc.connection-pool-size}
spring.scheduler.datasource.dbcp2.min-idle=1
spring.scheduler.datasource.dbcp2.pool-prepared-statements=true

spring.security.datasource.url=${jdbc.url}
spring.security.datasource.username=${security.username}
spring.security.datasource.password=${security.password}
spring.security.datasource.driver-class-name=oracle.jdbc.OracleDriver
spring.security.datasource.connectionProperties=oracle.net.disableOob=true
spring.security.datasource.dbcp2.max-wait-millis=${jdbc.connection-timeout}
spring.security.datasource.dbcp2.max-total=${jdbc.connection-pool-size}
spring.security.datasource.dbcp2.max-idle=${jdbc.connection-pool-size}
spring.security.datasource.dbcp2.min-idle=1
spring.security.datasource.dbcp2.pool-prepared-statements=true

spring.servlet.multipart.max-file-size=${web.max-file-size}

# spring jpa
spring.jpa.generate-ddl=false
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.database=ORACLE
#spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.Oracle12cDialect
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true

spring.scheduler.datasource.continue-on-error=false
spring.scheduler.datasource.generate-unique-name=false

# log
log.appender=stdout
log.level=info

# jackson
spring.jackson.serialization.write_dates_as_timestamps=false
spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false
spring.jackson.deserialization.accept-single-value-as-array=true

#if any of these formats are not defined then a locale default will be used
i18n.dateFormat=d
i18n.timeFormat=G
i18n.numberFormat=n
i18n.integerNumberFormat=##0
i18n.fractionalNumberFormat=##0.00
i18n.financialNumberFormat=a
i18n.percentageNumberFormat=p2

# How many service threads can be used
scheduler.service.threads=4
# hint (for future use)
scheduler.node.count.hint=1
# name of the scheduler to be serviced by this node
scheduler.service.name=DEFAULT
# the default timeout to acquire lock
scheduler.lock.acquire.timeout=1000
scheduler.lock.acquire.variance=0.2

#metrics endpoints port
management.server.port=8080
#url path
#management.endpoints.web.base-path=/monitor
#all endpoints enabled
management.endpoints.enabled-by-default=true
#add hostname tag to metrics
metrics.tags.hostname.enabled=true
#enable shutdown endpoint
management.endpoint.shutdown.enabled=false
#metrics endpoints enabled
management.endpoint.metrics.enabled=true
#enable all endpoint via WEB
management.endpoints.web.exposure.include=*
#enable prometheus metrics format
management.endpoint.prometheus.enabled=true

#enable flyway endpoint
management.endpoint.flyway.enabled=false

#Cors settings
management.endpoints.web.cors.allowed-origins=*
management.endpoints.web.cors.allowed-methods=GET

#Elastic Configuration
management.metrics.export.elastic.enabled=false
management.metrics.export.elastic.host=http://elasticsearchhost:port/
management.metrics.export.elastic.step=10s
management.metrics.export.elastic.index=index-name
management.metrics.export.elastic.auto-create-index=true
management.metrics.export.elastic.index-date-format=yyyy-MM
#management.metrics.export.elastic.user-name=
#management.metrics.export.elastic.password=
management.metrics.export.elastic.timestamp-field-name=@timestamp
management.metrics.export.elastic.connect-timeout=1s
management.metrics.export.elastic.read-timeout=10s

#disable jmx
management.endpoints.jmx.exposure.exclude=*

#flyway
spring.flyway.enabled=false

spring.quartz.jdbc.initialize-schema=never
spring.quartz.job-store-type=jdbc
#spring.quartz.jdbc.schema=

spring.quartz.properties.org.quartz.scheduler.instanceName = ${scheduler.service.name}
spring.quartz.properties.org.quartz.scheduler.instanceId = AUTO
spring.quartz.properties.org.quartz.scheduler.makeSchedulerThreadDaemon = true
spring.quartz.properties.org.quartz.scheduler.batchTriggerAcquisitionMaxCount = ${scheduler.service.threads}

spring.quartz.properties.org.quartz.threadPool.threadCount = ${scheduler.service.threads}
spring.quartz.properties.org.quartz.threadPool.threadPriority = 5
spring.quartz.properties.org.quartz.threadPool.threadsInheritContextClassLoaderOfInitializingThread = true
spring.quartz.properties.org.quartz.threadPool.makeThreadsDaemons = true

# check for job interval = 1s (default)
spring.quartz.properties.org.quartz.scheduler.idleWaitTime=${scheduler.lock.acquire.timeout}

spring.quartz.properties.org.quartz.jobStore.isClustered = true
# cluster check 5s
spring.quartz.properties.org.quartz.jobStore.clusterCheckinInterval = 5000
# 10 minutes to mark trigger as missfired
spring.quartz.properties.org.quartz.jobStore.misfireThreshold = 600000
spring.quartz.properties.org.quartz.jobStore.driverDelegateClass=com.aptitudesoftware.scheduler.invoker.LabeledStdJdbcStore
