insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'CC_INCOME_EXPENSE' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIECD_AR' ) , ( select vie_id from stn.vie_code where vie_cd = 4 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'BOP' ) , 1 , 'DECONSOL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'UPR_INITIAL' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIEPD_UPR' ) , ( select vie_id from stn.vie_code where vie_cd = 4 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'BOP' ) , -1 , 'DECONSOL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'UPR_CHANGE' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIEPD_UPR' ) , ( select vie_id from stn.vie_code where vie_cd = 4 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'BOP' ) , -1 , 'DECONSOL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'WRITTEN_PREMIUM' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIEPD_AR' ) , ( select vie_id from stn.vie_code where vie_cd = 4 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'BOP' ) , -1 , 'DECONSOL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'PGAAP_UPR_INITIAL' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIEPD_PGAAP_UPR' ) , ( select vie_id from stn.vie_code where vie_cd = 4 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'BOP' ) , -1 , 'DECONSOL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'PGAAP_UPR_CHANGE' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIEPD_PGAAP_UPR' ) , ( select vie_id from stn.vie_code where vie_cd = 4 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'BOP' ) , -1 , 'DECONSOL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'DAC_CC_CAP_DEF' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIECD_DAC_CAP_DEF' ) , ( select vie_id from stn.vie_code where vie_cd = 4 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'BOP' ) , -1 , 'DECONSOL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'LOSSES_PAID_CONTRA' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIELD_CNPL' ) , ( select vie_id from stn.vie_code where vie_cd = 4 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'BOP' ) , -1 , 'DECONSOL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'LOSS_RESERVES' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIELD_CASE' ) , ( select vie_id from stn.vie_code where vie_cd = 4 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'BOP' ) , -1 , 'DECONSOL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'LAE_RESERVES' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIELD_LAE' ) , ( select vie_id from stn.vie_code where vie_cd = 4 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'BOP' ) , -1 , 'DECONSOL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'LOSS_SALVAGE_RESERVE' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIELD_SAL' ) , ( select vie_id from stn.vie_code where vie_cd = 4 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'BOP' ) , -1 , 'DECONSOL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'LAE_SALVAGE_RESERVES' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIELD_LAES' ) , ( select vie_id from stn.vie_code where vie_cd = 4 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'BOP' ) , -1 , 'DECONSOL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'LM_PD_RECLASS_CONTRA' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIELD_CNLM' ) , ( select vie_id from stn.vie_code where vie_cd = 4 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'BOP' ) , -1 , 'DECONSOL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'LOSS_RECOVERY_CONTRA' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIELD_CNSS' ) , ( select vie_id from stn.vie_code where vie_cd = 4 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'BOP' ) , -1 , 'DECONSOL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'CC_INCOME_EXPENSE' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIECD_AR' ) , ( select vie_id from stn.vie_code where vie_cd = 5 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'EOP' ) , 1 , 'DECONSOL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'DAC_CC_CAP_DEF' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIECD_DAC_CAP_DEF' ) , ( select vie_id from stn.vie_code where vie_cd = 5 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'EOP' ) , 1 , 'DECONSOL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'UPR_INITIAL' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIEPD_UPR' ) , ( select vie_id from stn.vie_code where vie_cd = 5 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'EOP' ) , -1 , 'DECONSOL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'UPR_CHANGE' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIEPD_UPR' ) , ( select vie_id from stn.vie_code where vie_cd = 5 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'EOP' ) , -1 , 'DECONSOL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'WRITTEN_PREMIUM' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIEPD_AR' ) , ( select vie_id from stn.vie_code where vie_cd = 5 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'EOP' ) , -1 , 'DECONSOL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'PGAAP_UPR_INITIAL' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIEPD_PGAAP_UPR' ) , ( select vie_id from stn.vie_code where vie_cd = 5 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'EOP' ) , -1 , 'DECONSOL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'PGAAP_UPR_CHANGE' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIEPD_PGAAP_UPR' ) , ( select vie_id from stn.vie_code where vie_cd = 5 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'EOP' ) , -1 , 'DECONSOL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'LOSSES_PAID_CONTRA' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIELD_CNPL' ) , ( select vie_id from stn.vie_code where vie_cd = 5 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'EOP' ) , -1 , 'DECONSOL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'LOSS_RESERVES' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIELD_CASE' ) , ( select vie_id from stn.vie_code where vie_cd = 5 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'EOP' ) , -1 , 'DECONSOL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'LAE_RESERVES' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIELD_LAE' ) , ( select vie_id from stn.vie_code where vie_cd = 5 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'EOP' ) , -1 , 'DECONSOL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'LOSS_SALVAGE_RESERVE' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIELD_SAL' ) , ( select vie_id from stn.vie_code where vie_cd = 5 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'EOP' ) , -1 , 'DECONSOL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'LAE_SALVAGE_RESERVES' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIELD_LAES' ) , ( select vie_id from stn.vie_code where vie_cd = 5 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'EOP' ) , -1 , 'DECONSOL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'LM_PD_RECLASS_CONTRA' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIELD_CNLM' ) , ( select vie_id from stn.vie_code where vie_cd = 5 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'EOP' ) , -1 , 'DECONSOL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'LOSS_RECOVERY_CONTRA' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIELD_CNSS' ) , ( select vie_id from stn.vie_code where vie_cd = 5 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'EOP' ) , -1 , 'DECONSOL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'UPR_INITIAL' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIEPF_UPR_INITIAL' ) , ( select vie_id from stn.vie_code where vie_cd = 5 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , 1 , 'DECONSOL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'UPR_CHANGE' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIEPF_UPR_CHANGE' ) , ( select vie_id from stn.vie_code where vie_cd = 5 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , 1 , 'DECONSOL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'WP_ACCRN_AMORT' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIEPF_ACC' ) , ( select vie_id from stn.vie_code where vie_cd = 5 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , 1 , 'DECONSOL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'PGAAP_UPR_INITIAL' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIEPF_PGAAP_UPR_IN' ) , ( select vie_id from stn.vie_code where vie_cd = 5 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , 1 , 'DECONSOL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'PGAAP_UPR_CHANGE' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIEPF_PGAAP_UPR_CH' ) , ( select vie_id from stn.vie_code where vie_cd = 5 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , 1 , 'DECONSOL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'WP_WRITEOFF_CURRENT' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIEPF_UN_CURR' ) , ( select vie_id from stn.vie_code where vie_cd = 5 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , 1 , 'DECONSOL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'WP_WRITEOFF_FUTURE' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIEPF_UN_FUT' ) , ( select vie_id from stn.vie_code where vie_cd = 5 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , 1 , 'DECONSOL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'CC_ACCRN_AMORT' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIECF_ACC' ) , ( select vie_id from stn.vie_code where vie_cd = 5 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , 1 , 'DECONSOL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'CC_WRITEOFF_CURRENT' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIECF_UN_CURR' ) , ( select vie_id from stn.vie_code where vie_cd = 5 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , 1 , 'DECONSOL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'CC_WRITEOFF_FUTURE' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIECF_UN_FUT' ) , ( select vie_id from stn.vie_code where vie_cd = 5 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , 1 , 'DECONSOL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'DAC_CC_AMORT' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIECF_DAC_CC_AMORT' ) , ( select vie_id from stn.vie_code where vie_cd = 5 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , 1 , 'DECONSOL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'LOSSES_PAID_CONTRA' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIELF_CNPL' ) , ( select vie_id from stn.vie_code where vie_cd = 5 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , 1 , 'DECONSOL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'LOSSES_PAID' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIELF_PAID' ) , ( select vie_id from stn.vie_code where vie_cd = 5 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , 1 , 'DECONSOL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'LAE_PAID' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIELF_PDL' ) , ( select vie_id from stn.vie_code where vie_cd = 5 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , 1 , 'DECONSOL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'LOSS_RESERVES' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIELF_CASE' ) , ( select vie_id from stn.vie_code where vie_cd = 5 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , 1 , 'DECONSOL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'LAE_RESERVES' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIELF_LAE' ) , ( select vie_id from stn.vie_code where vie_cd = 5 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , 1 , 'DECONSOL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'LOSS_SALVAGE_RESERVE' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIELF_SAL' ) , ( select vie_id from stn.vie_code where vie_cd = 5 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , 1 , 'DECONSOL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'LOSS_RECOVERIES' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIELF_REC' ) , ( select vie_id from stn.vie_code where vie_cd = 5 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , 1 , 'DECONSOL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'LAE_RECOVERIES' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIELF_PDLS' ) , ( select vie_id from stn.vie_code where vie_cd = 5 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , 1 , 'DECONSOL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'LAE_SALVAGE_RESERVES' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIELF_LAES' ) , ( select vie_id from stn.vie_code where vie_cd = 5 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , 1 , 'DECONSOL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'LM_RECOVERED' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIELF_LMI' ) , ( select vie_id from stn.vie_code where vie_cd = 5 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , 1 , 'DECONSOL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'LM_PD_RECLASS_CONTRA' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIELF_CNLM' ) , ( select vie_id from stn.vie_code where vie_cd = 5 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , 1 , 'DECONSOL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'LM_PAID' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIELF_LMP' ) , ( select vie_id from stn.vie_code where vie_cd = 5 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , 1 , 'DECONSOL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'OTHR_INC_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIELF_OTHR' ) , ( select vie_id from stn.vie_code where vie_cd = 5 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , 1 , 'DECONSOL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'LOSS_RECOVERY_CONTRA' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIELF_CNSS' ) , ( select vie_id from stn.vie_code where vie_cd = 5 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , 1 , 'DECONSOL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'UPR_INITIAL' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIEPC_UPR' ) , ( select vie_id from stn.vie_code where vie_cd = 2 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'BOP' ) , 1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'UPR_CHANGE' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIEPC_UPR' ) , ( select vie_id from stn.vie_code where vie_cd = 2 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'BOP' ) , 1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'WRITTEN_PREMIUM' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIEPC_AR' ) , ( select vie_id from stn.vie_code where vie_cd = 2 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'BOP' ) , 1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'PGAAP_UPR_INITIAL' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIEPC_PGAAP_UPR' ) , ( select vie_id from stn.vie_code where vie_cd = 2 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'BOP' ) , 1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'PGAAP_UPR_CHANGE' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIEPC_PGAAP_UPR' ) , ( select vie_id from stn.vie_code where vie_cd = 2 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'BOP' ) , 1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'CC_INCOME_EXPENSE' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIECC_AR' ) , ( select vie_id from stn.vie_code where vie_cd = 2 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'BOP' ) , 1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'DAC_CC_CAP_DEF' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIECC_DAC_CAP_DEF' ) , ( select vie_id from stn.vie_code where vie_cd = 2 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'BOP' ) , 1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'LOSSES_PAID_CONTRA' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIELC_CNPL' ) , ( select vie_id from stn.vie_code where vie_cd = 2 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'BOP' ) , 1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'LOSS_RESERVES' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIELC_CASE' ) , ( select vie_id from stn.vie_code where vie_cd = 2 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'BOP' ) , 1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'LAE_RESERVES' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIELC_LAE' ) , ( select vie_id from stn.vie_code where vie_cd = 2 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'BOP' ) , 1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'LOSS_SALVAGE_RESERVE' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIELC_SAL' ) , ( select vie_id from stn.vie_code where vie_cd = 2 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'BOP' ) , 1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'LAE_SALVAGE_RESERVES' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIELC_LAES' ) , ( select vie_id from stn.vie_code where vie_cd = 2 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'BOP' ) , 1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'LM_PD_RECLASS_CONTRA' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIELC_CNLM' ) , ( select vie_id from stn.vie_code where vie_cd = 2 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'BOP' ) , 1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'LOSS_RECOVERY_CONTRA' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIELC_CNSS' ) , ( select vie_id from stn.vie_code where vie_cd = 2 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'BOP' ) , 1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'UPR_INITIAL' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIEPC_UPR' ) , ( select vie_id from stn.vie_code where vie_cd = 3 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'EOP' ) , 1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'UPR_CHANGE' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIEPC_UPR' ) , ( select vie_id from stn.vie_code where vie_cd = 3 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'EOP' ) , 1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'WRITTEN_PREMIUM' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIEPC_AR' ) , ( select vie_id from stn.vie_code where vie_cd = 3 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'EOP' ) , 1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'PGAAP_UPR_INITIAL' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIEPC_PGAAP_UPR' ) , ( select vie_id from stn.vie_code where vie_cd = 3 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'EOP' ) , 1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'PGAAP_UPR_CHANGE' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIEPC_PGAAP_UPR' ) , ( select vie_id from stn.vie_code where vie_cd = 3 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'EOP' ) , 1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'CC_INCOME_EXPENSE' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIECC_AR' ) , ( select vie_id from stn.vie_code where vie_cd = 3 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'EOP' ) , 1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'DAC_CC_CAP_DEF' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIECC_DAC_CAP_DEF' ) , ( select vie_id from stn.vie_code where vie_cd = 3 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'EOP' ) , 1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'LOSSES_PAID_CONTRA' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIELC_CNPL' ) , ( select vie_id from stn.vie_code where vie_cd = 3 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'EOP' ) , 1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'LOSS_RESERVES' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIELC_CASE' ) , ( select vie_id from stn.vie_code where vie_cd = 3 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'EOP' ) , 1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'LAE_RESERVES' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIELC_LAE' ) , ( select vie_id from stn.vie_code where vie_cd = 3 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'EOP' ) , 1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'LOSS_SALVAGE_RESERVE' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIELC_SAL' ) , ( select vie_id from stn.vie_code where vie_cd = 3 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'EOP' ) , 1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'LAE_SALVAGE_RESERVES' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIELC_LAES' ) , ( select vie_id from stn.vie_code where vie_cd = 3 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'EOP' ) , 1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'LM_PD_RECLASS_CONTRA' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIELC_CNLM' ) , ( select vie_id from stn.vie_code where vie_cd = 3 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'EOP' ) , 1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'LOSS_RECOVERY_CONTRA' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIELC_CNSS' ) , ( select vie_id from stn.vie_code where vie_cd = 3 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'EOP' ) , 1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'UPR_INITIAL' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIEPF_UPR_INITIAL' ) , ( select vie_id from stn.vie_code where vie_cd = 2 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , 1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'UPR_CHANGE' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIEPF_UPR_CHANGE' ) , ( select vie_id from stn.vie_code where vie_cd = 2 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , 1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'WRITTEN_PREMIUM' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIEPF_WP' ) , ( select vie_id from stn.vie_code where vie_cd = 2 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , 1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'WP_ACCRN_AMORT' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIEPF_ACC' ) , ( select vie_id from stn.vie_code where vie_cd = 2 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , 1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'PGAAP_UPR_INITIAL' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIEPF_PGAAP_UPR_IN' ) , ( select vie_id from stn.vie_code where vie_cd = 2 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , 1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'PGAAP_UPR_CHANGE' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIEPF_PGAAP_UPR_CH' ) , ( select vie_id from stn.vie_code where vie_cd = 2 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , 1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'WP_WRITEOFF_CURRENT' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIEPF_UN_CURR' ) , ( select vie_id from stn.vie_code where vie_cd = 2 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , 1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'WP_WRITEOFF_FUTURE' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIEPF_UN_FUT' ) , ( select vie_id from stn.vie_code where vie_cd = 2 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , 1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'CC_INCOME_EXPENSE' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIECF_CC' ) , ( select vie_id from stn.vie_code where vie_cd = 2 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , 1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'CC_INCOME_EXPENSE' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIECF_CC' ) , ( select vie_id from stn.vie_code where vie_cd = 6 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , 1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'CC_ACCRN_AMORT' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIECF_ACC' ) , ( select vie_id from stn.vie_code where vie_cd = 2 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , 1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'CC_WRITEOFF_CURRENT' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIECF_UN_CURR' ) , ( select vie_id from stn.vie_code where vie_cd = 2 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , 1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'CC_WRITEOFF_FUTURE' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIECF_UN_FUT' ) , ( select vie_id from stn.vie_code where vie_cd = 2 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , 1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'DAC_CC_AMORT' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIECF_DAC_CC_AMORT' ) , ( select vie_id from stn.vie_code where vie_cd = 2 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , 1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'LOSSES_PAID_CONTRA' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIELF_CNPL' ) , ( select vie_id from stn.vie_code where vie_cd = 2 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , 1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'LOSSES_PAID' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIELF_PAID' ) , ( select vie_id from stn.vie_code where vie_cd = 2 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , 1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'LAE_PAID' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIELF_PDL' ) , ( select vie_id from stn.vie_code where vie_cd = 2 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , 1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'LOSS_RESERVES' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIELF_CASE' ) , ( select vie_id from stn.vie_code where vie_cd = 2 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , 1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'LAE_RESERVES' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIELF_LAE' ) , ( select vie_id from stn.vie_code where vie_cd = 2 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , 1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'LOSS_SALVAGE_RESERVE' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIELF_SAL' ) , ( select vie_id from stn.vie_code where vie_cd = 2 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , 1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'LOSS_RECOVERIES' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIELF_REC' ) , ( select vie_id from stn.vie_code where vie_cd = 2 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , 1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'LAE_RECOVERIES' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIELF_PDLS' ) , ( select vie_id from stn.vie_code where vie_cd = 2 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , 1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'LAE_SALVAGE_RESERVES' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIELF_LAES' ) , ( select vie_id from stn.vie_code where vie_cd = 2 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , 1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'LM_RECOVERED' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIELF_LMI' ) , ( select vie_id from stn.vie_code where vie_cd = 2 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , 1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'LM_PD_RECLASS_CONTRA' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIELF_CNLM' ) , ( select vie_id from stn.vie_code where vie_cd = 2 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , 1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'LM_PAID' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIELF_LMP' ) , ( select vie_id from stn.vie_code where vie_cd = 2 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , 1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'OTHR_INC_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIELF_OTHR' ) , ( select vie_id from stn.vie_code where vie_cd = 2 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , 1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'LOSS_RECOVERY_CONTRA' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIELF_CNSS' ) , ( select vie_id from stn.vie_code where vie_cd = 2 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , 1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'UPR_INITIAL' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIEPF_UPR_INITIAL' ) , ( select vie_id from stn.vie_code where vie_cd = 6 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , -1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'UPR_CHANGE' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIEPF_UPR_CHANGE' ) , ( select vie_id from stn.vie_code where vie_cd = 6 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , -1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'WRITTEN_PREMIUM' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIEPF_WP' ) , ( select vie_id from stn.vie_code where vie_cd = 6 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , -1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'WP_ACCRN_AMORT' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIEPF_ACC' ) , ( select vie_id from stn.vie_code where vie_cd = 6 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , -1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'PGAAP_UPR_INITIAL' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIEPF_PGAAP_UPR_IN' ) , ( select vie_id from stn.vie_code where vie_cd = 6 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , -1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'PGAAP_UPR_CHANGE' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIEPF_PGAAP_UPR_CH' ) , ( select vie_id from stn.vie_code where vie_cd = 6 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , -1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'WP_WRITEOFF_CURRENT' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIEPF_UN_CURR' ) , ( select vie_id from stn.vie_code where vie_cd = 6 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , -1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'WP_WRITEOFF_FUTURE' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIEPF_UN_FUT' ) , ( select vie_id from stn.vie_code where vie_cd = 6 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , -1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'CC_ACCRN_AMORT' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIECF_ACC' ) , ( select vie_id from stn.vie_code where vie_cd = 6 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , -1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'CC_WRITEOFF_CURRENT' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIECF_UN_CURR' ) , ( select vie_id from stn.vie_code where vie_cd = 6 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , -1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'CC_WRITEOFF_FUTURE' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIECF_UN_FUT' ) , ( select vie_id from stn.vie_code where vie_cd = 6 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , -1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'DAC_CC_AMORT' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIECF_DAC_CC_AMORT' ) , ( select vie_id from stn.vie_code where vie_cd = 6 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , -1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'LOSSES_PAID_CONTRA' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIELF_CNPL' ) , ( select vie_id from stn.vie_code where vie_cd = 6 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , -1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'LOSSES_PAID' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIELF_PAID' ) , ( select vie_id from stn.vie_code where vie_cd = 6 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , -1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'LAE_PAID' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIELF_PDL' ) , ( select vie_id from stn.vie_code where vie_cd = 6 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , -1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'LOSS_RESERVES' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIELF_CASE' ) , ( select vie_id from stn.vie_code where vie_cd = 6 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , -1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'LAE_RESERVES' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIELF_LAE' ) , ( select vie_id from stn.vie_code where vie_cd = 6 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , -1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'LOSS_SALVAGE_RESERVE' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIELF_SAL' ) , ( select vie_id from stn.vie_code where vie_cd = 6 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , -1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'LOSS_RECOVERIES' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIELF_REC' ) , ( select vie_id from stn.vie_code where vie_cd = 6 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , -1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'LAE_RECOVERIES' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIELF_PDLS' ) , ( select vie_id from stn.vie_code where vie_cd = 6 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , -1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'LAE_SALVAGE_RESERVES' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIELF_LAES' ) , ( select vie_id from stn.vie_code where vie_cd = 6 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , -1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'LM_RECOVERED' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIELF_LMI' ) , ( select vie_id from stn.vie_code where vie_cd = 6 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , -1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'LM_PD_RECLASS_CONTRA' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIELF_CNLM' ) , ( select vie_id from stn.vie_code where vie_cd = 6 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , -1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'LM_PAID' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIELF_LMP' ) , ( select vie_id from stn.vie_code where vie_cd = 6 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , -1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'OTHR_INC_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIELF_OTHR' ) , ( select vie_id from stn.vie_code where vie_cd = 6 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , -1 , 'NULL' );
insert into stn.vie_posting_method_ledger ( input_basis_id , event_typ_id , vie_event_typ_id , vie_id , output_basis_id , ledger_id , fin_calc_id , negate_flag , sub_event ) values ( ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select event_typ_id from stn.event_type where event_typ = 'LOSS_RECOVERY_CONTRA' ) , ( select event_typ_id from stn.event_type where event_typ = 'VIELF_CNSS' ) , ( select vie_id from stn.vie_code where vie_cd = 6 ) , ( select basis_id from stn.posting_accounting_basis where basis_cd = 'US_GAAP' ) , ( select ledger_id from stn.posting_ledger where ledger_cd = 'GO_CONSOL' ) , ( select fin_calc_id from stn.posting_financial_calc where fin_calc_cd = 'MONTHLY' ) , -1 , 'NULL' );
commit;