insert into stn.step ( step_id , step_cd , process_id , param_set_id ) values ( 1  , 'StandardiseFXRates'              , ( select process_id from stn.process where project_id = ( select project_id from stn.project where project_name = 'StandardiseReferenceData'       and folder_id = ( select folder_id from stn.execution_folder where folder_name = 'custom' ) ) and process_name = 'fx_rate-standardise'                     and process_type_id = ( select process_type_id from stn.process_type where process_type_cd = 'Microflow' ) ) , ( select param_set_id from stn.param_set where param_set_cd = 'standardisation-reference-data' ) );
insert into stn.step ( step_id , step_cd , process_id , param_set_id ) values ( 2  , 'DSRFXRates'                      , ( select process_id from stn.process where project_id = ( select project_id from stn.project where project_name = 'mah_common'                     and folder_id = ( select folder_id from stn.execution_folder where folder_name = 'core' ) )   and process_name = 'mahr02_fx_rate'                          and process_type_id = ( select process_type_id from stn.process_type where process_type_cd = 'Microflow' ) ) , ( select param_set_id from stn.param_set where param_set_cd = 'dsr-reference-data' ) );
insert into stn.step ( step_id , step_cd , process_id , param_set_id ) values ( 3  , 'StandardiseGLAccounts'           , ( select process_id from stn.process where project_id = ( select project_id from stn.project where project_name = 'StandardiseReferenceData'       and folder_id = ( select folder_id from stn.execution_folder where folder_name = 'custom' ) ) and process_name = 'gl_account-standardise'                  and process_type_id = ( select process_type_id from stn.process_type where process_type_cd = 'Microflow' ) ) , ( select param_set_id from stn.param_set where param_set_cd = 'standardisation-reference-data' ) );
insert into stn.step ( step_id , step_cd , process_id , param_set_id ) values ( 4  , 'DSRGLAccounts'                   , ( select process_id from stn.process where project_id = ( select project_id from stn.project where project_name = 'mah_common'                     and folder_id = ( select folder_id from stn.execution_folder where folder_name = 'core' ) )   and process_name = 'mahr11_gl_account'                       and process_type_id = ( select process_type_id from stn.process_type where process_type_cd = 'Microflow' ) ) , ( select param_set_id from stn.param_set where param_set_cd = 'dsr-reference-data' ) );
insert into stn.step ( step_id , step_cd , process_id , param_set_id ) values ( 5  , 'StandardiseDepartments'          , ( select process_id from stn.process where project_id = ( select project_id from stn.project where project_name = 'StandardiseReferenceData'       and folder_id = ( select folder_id from stn.execution_folder where folder_name = 'custom' ) ) and process_name = 'department-standardise'                  and process_type_id = ( select process_type_id from stn.process_type where process_type_cd = 'Microflow' ) ) , ( select param_set_id from stn.param_set where param_set_cd = 'standardisation-reference-data' ) );
insert into stn.step ( step_id , step_cd , process_id , param_set_id ) values ( 6  , 'DSRDepartments'                  , ( select process_id from stn.process where project_id = ( select project_id from stn.project where project_name = 'mah_common'                     and folder_id = ( select folder_id from stn.execution_folder where folder_name = 'core' ) )   and process_name = 'mahr10_book'                             and process_type_id = ( select process_type_id from stn.process_type where process_type_cd = 'Microflow' ) ) , ( select param_set_id from stn.param_set where param_set_cd = 'dsr-reference-data' ) );
insert into stn.step ( step_id , step_cd , process_id , param_set_id ) values ( 7  , 'StandardiseGLChartfields'        , ( select process_id from stn.process where project_id = ( select project_id from stn.project where project_name = 'StandardiseReferenceData'       and folder_id = ( select folder_id from stn.execution_folder where folder_name = 'custom' ) ) and process_name = 'gl_chartfield-standardise'               and process_type_id = ( select process_type_id from stn.process_type where process_type_cd = 'Microflow' ) ) , ( select param_set_id from stn.param_set where param_set_cd = 'standardisation-reference-data' ) );
insert into stn.step ( step_id , step_cd , process_id , param_set_id ) values ( 8  , 'DSRGLChartfields'                , ( select process_id from stn.process where project_id = ( select project_id from stn.project where project_name = 'DSRReferenceData'               and folder_id = ( select folder_id from stn.execution_folder where folder_name = 'custom' ) ) and process_name = 'gl_chartfield-dsr'                       and process_type_id = ( select process_type_id from stn.process_type where process_type_cd = 'Microflow' ) ) , ( select param_set_id from stn.param_set where param_set_cd = 'dsr-reference-data' ) );
insert into stn.step ( step_id , step_cd , process_id , param_set_id ) values ( 9  , 'StandardiseLegalEntities'        , ( select process_id from stn.process where project_id = ( select project_id from stn.project where project_name = 'StandardiseReferenceData'       and folder_id = ( select folder_id from stn.execution_folder where folder_name = 'custom' ) ) and process_name = 'legal_entity-standardise'                and process_type_id = ( select process_type_id from stn.process_type where process_type_cd = 'Microflow' ) ) , ( select param_set_id from stn.param_set where param_set_cd = 'standardisation-reference-data' ) );
insert into stn.step ( step_id , step_cd , process_id , param_set_id ) values ( 10 , 'DSRLegalEntities'                , ( select process_id from stn.process where project_id = ( select project_id from stn.project where project_name = 'mah_common'                     and folder_id = ( select folder_id from stn.execution_folder where folder_name = 'core' ) )   and process_name = 'mahr03_party_legal'                      and process_type_id = ( select process_type_id from stn.process_type where process_type_cd = 'Microflow' ) ) , ( select param_set_id from stn.param_set where param_set_cd = 'dsr-reference-data' ) );
insert into stn.step ( step_id , step_cd , process_id , param_set_id ) values ( 11 , 'DSRPartyBusiness'                , ( select process_id from stn.process where project_id = ( select project_id from stn.project where project_name = 'mah_common'                     and folder_id = ( select folder_id from stn.execution_folder where folder_name = 'core' ) )   and process_name = 'mahr04_party_business'                   and process_type_id = ( select process_type_id from stn.process_type where process_type_cd = 'Microflow' ) ) , ( select param_set_id from stn.param_set where param_set_cd = 'dsr-reference-data' ) );
insert into stn.step ( step_id , step_cd , process_id , param_set_id ) values ( 12 , 'DSRLegalEntityHierNodes'         , ( select process_id from stn.process where project_id = ( select project_id from stn.project where project_name = 'mah_common'                     and folder_id = ( select folder_id from stn.execution_folder where folder_name = 'core' ) )   and process_name = 'mahr08_org_hier_node'                    and process_type_id = ( select process_type_id from stn.process_type where process_type_cd = 'Microflow' ) ) , ( select param_set_id from stn.param_set where param_set_cd = 'dsr-reference-data' ) );
insert into stn.step ( step_id , step_cd , process_id , param_set_id ) values ( 13 , 'DSRLegalEntityHierLinks'         , ( select process_id from stn.process where project_id = ( select project_id from stn.project where project_name = 'mah_common'                     and folder_id = ( select folder_id from stn.execution_folder where folder_name = 'core' ) )   and process_name = 'mahr09_org_hier_struc'                   and process_type_id = ( select process_type_id from stn.process_type where process_type_cd = 'Microflow' ) ) , ( select param_set_id from stn.param_set where param_set_cd = 'dsr-reference-data' ) );
insert into stn.step ( step_id , step_cd , process_id , param_set_id ) values ( 14 , 'DSRInternalProcessEntities'      , ( select process_id from stn.process where project_id = ( select project_id from stn.project where project_name = 'mah_common'                     and folder_id = ( select folder_id from stn.execution_folder where folder_name = 'core' ) )   and process_name = 'mahr17_int_entity'                       and process_type_id = ( select process_type_id from stn.process_type where process_type_cd = 'Microflow' ) ) , ( select param_set_id from stn.param_set where param_set_cd = 'dsr-reference-data' ) );
insert into stn.step ( step_id , step_cd , process_id , param_set_id ) values ( 15 , 'StandardiseLegalEntityLinks'     , ( select process_id from stn.process where project_id = ( select project_id from stn.project where project_name = 'StandardiseReferenceData'       and folder_id = ( select folder_id from stn.execution_folder where folder_name = 'custom' ) ) and process_name = 'legal_entity_link-standardise'           and process_type_id = ( select process_type_id from stn.process_type where process_type_cd = 'Microflow' ) ) , ( select param_set_id from stn.param_set where param_set_cd = 'standardisation-reference-data' ) );
insert into stn.step ( step_id , step_cd , process_id , param_set_id ) values ( 16 , 'DSRLegalEntitySupplementalData'  , ( select process_id from stn.process where project_id = ( select project_id from stn.project where project_name = 'DSRReferenceData'               and folder_id = ( select folder_id from stn.execution_folder where folder_name = 'custom' ) ) and process_name = 'legal_entity-dsr'                        and process_type_id = ( select process_type_id from stn.process_type where process_type_cd = 'Microflow' ) ) , ( select param_set_id from stn.param_set where param_set_cd = 'standardisation-reference-data' ) );
insert into stn.step ( step_id , step_cd , process_id , param_set_id ) values ( 17 , 'DSRLegalEntityHierarchyData'     , ( select process_id from stn.process where project_id = ( select project_id from stn.project where project_name = 'DSRReferenceData'               and folder_id = ( select folder_id from stn.execution_folder where folder_name = 'custom' ) ) and process_name = 'legal_entity_hierarchies-dsr'            and process_type_id = ( select process_type_id from stn.process_type where process_type_cd = 'Microflow' ) ) , ( select param_set_id from stn.param_set where param_set_cd = 'dsr-reference-data' ) );
insert into stn.step ( step_id , step_cd , process_id , param_set_id ) values ( 18 , 'StandardiseGLComboEdit'          , ( select process_id from stn.process where project_id = ( select project_id from stn.project where project_name = 'StandardiseReferenceData'       and folder_id = ( select folder_id from stn.execution_folder where folder_name = 'custom' ) ) and process_name = 'gl_combo_edit-standardise'               and process_type_id = ( select process_type_id from stn.process_type where process_type_cd = 'Microflow' ) ) , ( select param_set_id from stn.param_set where param_set_cd = 'standardisation-reference-data' ) );
insert into stn.step ( step_id , step_cd , process_id , param_set_id ) values ( 19 , 'DSRGLComboEdit'                  , ( select process_id from stn.process where project_id = ( select project_id from stn.project where project_name = 'DSRReferenceData'               and folder_id = ( select folder_id from stn.execution_folder where folder_name = 'custom' ) ) and process_name = 'gl_combo_edit-dsr'                       and process_type_id = ( select process_type_id from stn.process_type where process_type_cd = 'Microflow' ) ) , ( select param_set_id from stn.param_set where param_set_cd = 'dsr-reference-data' ) );
insert into stn.step ( step_id , step_cd , process_id , param_set_id ) values ( 21 , 'StandardiseTaxJurisdiction'      , ( select process_id from stn.process where project_id = ( select project_id from stn.project where project_name = 'StandardiseReferenceData'       and folder_id = ( select folder_id from stn.execution_folder where folder_name = 'custom' ) ) and process_name = 'tax_jurisdiction-standardise'            and process_type_id = ( select process_type_id from stn.process_type where process_type_cd = 'Microflow' ) ) , ( select param_set_id from stn.param_set where param_set_cd = 'standardisation-reference-data' ) );
insert into stn.step ( step_id , step_cd , process_id , param_set_id ) values ( 22 , 'DSRTaxJurisdiction'              , ( select process_id from stn.process where project_id = ( select project_id from stn.project where project_name = 'DSRReferenceData'               and folder_id = ( select folder_id from stn.execution_folder where folder_name = 'custom' ) ) and process_name = 'tax_jurisdiction-dsr'                    and process_type_id = ( select process_type_id from stn.process_type where process_type_cd = 'Microflow' ) ) , ( select param_set_id from stn.param_set where param_set_cd = 'dsr-reference-data' ) );
insert into stn.step ( step_id , step_cd , process_id , param_set_id ) values ( 23 , 'StandardiseCessionEvents'        , ( select process_id from stn.process where project_id = ( select project_id from stn.project where project_name = 'StandardiseInsurancePolicyData' and folder_id = ( select folder_id from stn.execution_folder where folder_name = 'custom' ) ) and process_name = 'cession_event-standardise'               and process_type_id = ( select process_type_id from stn.process_type where process_type_cd = 'Microflow' ) ) , ( select param_set_id from stn.param_set where param_set_cd = 'standardisation-transaction-data' ) );
insert into stn.step ( step_id , step_cd , process_id , param_set_id ) values ( 24 , 'DSRCessionEvents'                , ( select process_id from stn.process where project_id = ( select project_id from stn.project where project_name = 'mah_common'                     and folder_id = ( select folder_id from stn.execution_folder where folder_name = 'core' ) )   and process_name = 'maha01_acc_event'                        and process_type_id = ( select process_type_id from stn.process_type where process_type_cd = 'Microflow' ) ) , ( select param_set_id from stn.param_set where param_set_cd = 'dsr-transaction-data' ) );
insert into stn.step ( step_id , step_cd , process_id , param_set_id ) values ( 25 , 'StandardiseInsurancePolicies'    , ( select process_id from stn.process where project_id = ( select project_id from stn.project where project_name = 'StandardiseInsurancePolicyData' and folder_id = ( select folder_id from stn.execution_folder where folder_name = 'custom' ) ) and process_name = 'insurance_policy-standardise'            and process_type_id = ( select process_type_id from stn.process_type where process_type_cd = 'Microflow' ) ) , ( select param_set_id from stn.param_set where param_set_cd = 'standardisation-reference-data' ) );
insert into stn.step ( step_id , step_cd , process_id , param_set_id ) values ( 26 , 'DSRInsurancePolicies'            , ( select process_id from stn.process where project_id = ( select project_id from stn.project where project_name = 'mah_fdr_trans'                  and folder_id = ( select folder_id from stn.execution_folder where folder_name = 'core' ) )   and process_name = 'mahinp01_insurance_policy'               and process_type_id = ( select process_type_id from stn.process_type where process_type_cd = 'Microflow' ) ) , ( select param_set_id from stn.param_set where param_set_cd = 'dsr-reference-data' ) );
insert into stn.step ( step_id , step_cd , process_id , param_set_id ) values ( 27 , 'DSRPolicyTaxJurisdictions'       , ( select process_id from stn.process where project_id = ( select project_id from stn.project where project_name = 'DSRReferenceData'               and folder_id = ( select folder_id from stn.execution_folder where folder_name = 'custom' ) ) and process_name = 'policy_tax_jurisdiction-dsr'             and process_type_id = ( select process_type_id from stn.process_type where process_type_cd = 'Microflow' ) ) , ( select param_set_id from stn.param_set where param_set_cd = 'dsr-reference-data' ) );
insert into stn.step ( step_id , step_cd , process_id , param_set_id ) values ( 28 , 'SLRFXRates'                      , ( select process_id from stn.process where project_id = ( select project_id from stn.project where project_name = 'Subledger'                      and folder_id = ( select folder_id from stn.execution_folder where folder_name = 'custom' ) ) and process_name = 'fx_rate-subledger'                       and process_type_id = ( select process_type_id from stn.process_type where process_type_cd = 'Microflow' ) ) , ( select param_set_id from stn.param_set where param_set_cd = 'standardisation-reference-data' ) );
insert into stn.step ( step_id , step_cd , process_id , param_set_id ) values ( 29 , 'SLRAccounts'                     , ( select process_id from stn.process where project_id = ( select project_id from stn.project where project_name = 'Subledger'                      and folder_id = ( select folder_id from stn.execution_folder where folder_name = 'custom' ) ) and process_name = 'account-subledger'                       and process_type_id = ( select process_type_id from stn.process_type where process_type_cd = 'Microflow' ) ) , ( select param_set_id from stn.param_set where param_set_cd = 'standardisation-reference-data' ) );
insert into stn.step ( step_id , step_cd , process_id , param_set_id ) values ( 30 , 'StandardiseLedgers'              , ( select process_id from stn.process where project_id = ( select project_id from stn.project where project_name = 'StandardiseReferenceData'       and folder_id = ( select folder_id from stn.execution_folder where folder_name = 'custom' ) ) and process_name = 'ledger-standardise'                      and process_type_id = ( select process_type_id from stn.process_type where process_type_cd = 'Microflow' ) ) , ( select param_set_id from stn.param_set where param_set_cd = 'standardisation-reference-data' ) );
insert into stn.step ( step_id , step_cd , process_id , param_set_id ) values ( 31 , 'DSRLedgers'                      , ( select process_id from stn.process where project_id = ( select project_id from stn.project where project_name = 'DSRReferenceData'               and folder_id = ( select folder_id from stn.execution_folder where folder_name = 'custom' ) ) and process_name = 'ledger-dsr'                              and process_type_id = ( select process_type_id from stn.process_type where process_type_cd = 'Microflow' ) ) , ( select param_set_id from stn.param_set where param_set_cd = 'dsr-reference-data' ) );
insert into stn.step ( step_id , step_cd , process_id , param_set_id ) values ( 32 , 'StandardiseEventHierarchy'       , ( select process_id from stn.process where project_id = ( select project_id from stn.project where project_name = 'StandardiseReferenceData'       and folder_id = ( select folder_id from stn.execution_folder where folder_name = 'custom' ) ) and process_name = 'event_hierarchy-standardise'             and process_type_id = ( select process_type_id from stn.process_type where process_type_cd = 'Microflow' ) ) , ( select param_set_id from stn.param_set where param_set_cd = 'standardisation-reference-data' ) );
insert into stn.step ( step_id , step_cd , process_id , param_set_id ) values ( 33 , 'DSREventHierarchy'               , ( select process_id from stn.process where project_id = ( select project_id from stn.project where project_name = 'DSRReferenceData'               and folder_id = ( select folder_id from stn.execution_folder where folder_name = 'custom' ) ) and process_name = 'event_hierarchy-dsr'                     and process_type_id = ( select process_type_id from stn.process_type where process_type_cd = 'Microflow' ) ) , ( select param_set_id from stn.param_set where param_set_cd = 'dsr-reference-data' ) );
insert into stn.step ( step_id , step_cd , process_id , param_set_id ) values ( 35 , 'DSRJournalLine'                  , ( select process_id from stn.process where project_id = ( select project_id from stn.project where project_name = 'mah_common'                     and folder_id = ( select folder_id from stn.execution_folder where folder_name = 'core' ) )   and process_name = 'maha02_adjustment_load'                  and process_type_id = ( select process_type_id from stn.process_type where process_type_cd = 'Microflow' ) ) , ( select param_set_id from stn.param_set where param_set_cd = 'dsr-transaction-data' ) );
insert into stn.step ( step_id , step_cd , process_id , param_set_id ) values ( 34 , 'StandardiseJournalLine'          , ( select process_id from stn.process where project_id = ( select project_id from stn.project where project_name = 'StandardiseReferenceData'       and folder_id = ( select folder_id from stn.execution_folder where folder_name = 'custom' ) ) and process_name = 'journal_line-standardise'                and process_type_id = ( select process_type_id from stn.process_type where process_type_cd = 'Microflow' ) ) , ( select param_set_id from stn.param_set where param_set_cd = 'standardisation-transaction-data' ) );
insert into stn.step ( step_id , step_cd , process_id , param_set_id ) values ( 36 , 'RollDates'                       , ( select process_id from stn.process where project_id = ( select project_id from stn.project where project_name = 'Utilities'                      and folder_id = ( select folder_id from stn.execution_folder where folder_name = 'custom' ) ) and process_name = 'roll_date'                               and process_type_id = ( select process_type_id from stn.process_type where process_type_cd = 'Microflow' ) ) , ( select param_set_id from stn.param_set where param_set_cd = 'utilities' ) );
insert into stn.step ( step_id , step_cd , process_id , param_set_id ) values ( 37 , 'AutoResubmitTransactions'        , ( select process_id from stn.process where project_id = ( select project_id from stn.project where project_name = 'Utilities'                      and folder_id = ( select folder_id from stn.execution_folder where folder_name = 'custom' ) ) and process_name = 'autoresubmit_transactions'               and process_type_id = ( select process_type_id from stn.process_type where process_type_cd = 'Microflow' ) ) , ( select param_set_id from stn.param_set where param_set_cd = 'utilities' ) );
insert into stn.step ( step_id , step_cd , process_id , param_set_id ) values ( 38 , 'CheckResubmittedErrors'          , ( select process_id from stn.process where project_id = ( select project_id from stn.project where project_name = 'Utilities'                      and folder_id = ( select folder_id from stn.execution_folder where folder_name = 'custom' ) ) and process_name = 'check_resubmitted_errors'                and process_type_id = ( select process_type_id from stn.process_type where process_type_cd = 'Microflow' ) ) , ( select param_set_id from stn.param_set where param_set_cd = 'utilities' ) );
insert into stn.step ( step_id , step_cd , process_id , param_set_id ) values ( 39 , 'SLRUpdateDaysPeriods'            , ( select process_id from stn.process where project_id = ( select project_id from stn.project where project_name = 'Subledger'                      and folder_id = ( select folder_id from stn.execution_folder where folder_name = 'custom' ) ) and process_name = 'pSLR_DAYS_PERIODS-subledger'             and process_type_id = ( select process_type_id from stn.process_type where process_type_cd = 'Microflow' ) ) , ( select param_set_id from stn.param_set where param_set_cd = 'subledger' ) );
insert into stn.step ( step_id , step_cd , process_id , param_set_id ) values ( 40 , 'SLRUpdateCurrencies'             , ( select process_id from stn.process where project_id = ( select project_id from stn.project where project_name = 'Subledger'                      and folder_id = ( select folder_id from stn.execution_folder where folder_name = 'custom' ) ) and process_name = 'pUPDATE_SLR_CURRENCIES-subledger'        and process_type_id = ( select process_type_id from stn.process_type where process_type_cd = 'Microflow' ) ) , ( select param_set_id from stn.param_set where param_set_cd = 'subledger' ) );
insert into stn.step ( step_id , step_cd , process_id , param_set_id ) values ( 41 , 'SLRUpdateFakSeg3'                , ( select process_id from stn.process where project_id = ( select project_id from stn.project where project_name = 'Subledger'                      and folder_id = ( select folder_id from stn.execution_folder where folder_name = 'custom' ) ) and process_name = 'pUPDATE_SLR_SEGMENT_3-subledger'         and process_type_id = ( select process_type_id from stn.process_type where process_type_cd = 'Microflow' ) ) , ( select param_set_id from stn.param_set where param_set_cd = 'subledger' ) );
insert into stn.step ( step_id , step_cd , process_id , param_set_id ) values ( 42 , 'SLRUpdateFakSeg4'                , ( select process_id from stn.process where project_id = ( select project_id from stn.project where project_name = 'Subledger'                      and folder_id = ( select folder_id from stn.execution_folder where folder_name = 'custom' ) ) and process_name = 'pUPDATE_SLR_SEGMENT_4-subledger'         and process_type_id = ( select process_type_id from stn.process_type where process_type_cd = 'Microflow' ) ) , ( select param_set_id from stn.param_set where param_set_cd = 'subledger' ) );
insert into stn.step ( step_id , step_cd , process_id , param_set_id ) values ( 43 , 'SLRUpdateFakSeg5'                , ( select process_id from stn.process where project_id = ( select project_id from stn.project where project_name = 'Subledger'                      and folder_id = ( select folder_id from stn.execution_folder where folder_name = 'custom' ) ) and process_name = 'pUPDATE_SLR_SEGMENT_5-subledger'         and process_type_id = ( select process_type_id from stn.process_type where process_type_cd = 'Microflow' ) ) , ( select param_set_id from stn.param_set where param_set_cd = 'subledger' ) );
insert into stn.step ( step_id , step_cd , process_id , param_set_id ) values ( 44 , 'SLRUpdateFakSeg6'                , ( select process_id from stn.process where project_id = ( select project_id from stn.project where project_name = 'Subledger'                      and folder_id = ( select folder_id from stn.execution_folder where folder_name = 'custom' ) ) and process_name = 'pUPDATE_SLR_SEGMENT_6-subledger'         and process_type_id = ( select process_type_id from stn.process_type where process_type_cd = 'Microflow' ) ) , ( select param_set_id from stn.param_set where param_set_cd = 'subledger' ) );
insert into stn.step ( step_id , step_cd , process_id , param_set_id ) values ( 45 , 'SLRUpdateFakSeg7'                , ( select process_id from stn.process where project_id = ( select project_id from stn.project where project_name = 'Subledger'                      and folder_id = ( select folder_id from stn.execution_folder where folder_name = 'custom' ) ) and process_name = 'pUPDATE_SLR_SEGMENT_7-subledger'         and process_type_id = ( select process_type_id from stn.process_type where process_type_cd = 'Microflow' ) ) , ( select param_set_id from stn.param_set where param_set_cd = 'subledger' ) );
insert into stn.step ( step_id , step_cd , process_id , param_set_id ) values ( 46 , 'SLRUpdateFakSeg8'                , ( select process_id from stn.process where project_id = ( select project_id from stn.project where project_name = 'Subledger'                      and folder_id = ( select folder_id from stn.execution_folder where folder_name = 'custom' ) ) and process_name = 'pUPDATE_SLR_SEGMENT_8-subledger'         and process_type_id = ( select process_type_id from stn.process_type where process_type_cd = 'Microflow' ) ) , ( select param_set_id from stn.param_set where param_set_cd = 'subledger' ) );
insert into stn.step ( step_id , step_cd , process_id , param_set_id ) values ( 47 , 'SLRpProcess'                     , ( select process_id from stn.process where project_id = ( select project_id from stn.project where project_name = 'Subledger'                      and folder_id = ( select folder_id from stn.execution_folder where folder_name = 'custom' ) ) and process_name = 'pPROCESS_SLR-subledger'                  and process_type_id = ( select process_type_id from stn.process_type where process_type_cd = 'Microflow' ) ) , ( select param_set_id from stn.param_set where param_set_cd = 'subledger' ) );
insert into stn.step ( step_id , step_cd , process_id , param_set_id ) values ( 48 , 'SLRpUpdateJLU'                   , ( select process_id from stn.process where project_id = ( select project_id from stn.project where project_name = 'Subledger'                      and folder_id = ( select folder_id from stn.execution_folder where folder_name = 'custom' ) ) and process_name = 'pUpdateJLU-subledger'                    and process_type_id = ( select process_type_id from stn.process_type where process_type_cd = 'Microflow' ) ) , ( select param_set_id from stn.param_set where param_set_cd = 'subledger' ) );
insert into stn.step ( step_id , step_cd , process_id , param_set_id ) values ( 49 , 'GLINTExtract'                    , ( select process_id from stn.process where project_id = ( select project_id from stn.project where project_name = 'Subledger'                      and folder_id = ( select folder_id from stn.execution_folder where folder_name = 'custom' ) ) and process_name = 'pPROCESS_GLINT-subledger'                and process_type_id = ( select process_type_id from stn.process_type where process_type_cd = 'Microflow' ) ) , ( select param_set_id from stn.param_set where param_set_cd = 'subledger' ) );
insert into stn.step ( step_id , step_cd , process_id , param_set_id ) values ( 50 , 'pYECleardown'                    , ( select process_id from stn.process where project_id = ( select project_id from stn.project where project_name = 'Subledger'                      and folder_id = ( select folder_id from stn.execution_folder where folder_name = 'custom' ) ) and process_name = 'ye_cleardown'                            and process_type_id = ( select process_type_id from stn.process_type where process_type_cd = 'Microflow' ) ) , ( select param_set_id from stn.param_set where param_set_cd = 'subledger' ) );
insert into stn.step ( step_id , step_cd , process_id , param_set_id ) values ( 51 , 'FXReval'                         , ( select process_id from stn.process where project_id = ( select project_id from stn.project where project_name = 'Subledger'                      and folder_id = ( select folder_id from stn.execution_folder where folder_name = 'custom' ) ) and process_name = 'pFX_REVAL-subledger'                     and process_type_id = ( select process_type_id from stn.process_type where process_type_cd = 'Microflow' ) ) , ( select param_set_id from stn.param_set where param_set_cd = 'subledger' ) );
commit;