CREATE OR REPLACE TRIGGER FRTR_POSTING_DRIVER_AUDIT
  AFTER DELETE OR INSERT OR UPDATE
  ON fdr.Fr_posting_driver
  REFERENCING OLD AS OLD NEW AS NEW
  FOR EACH ROW
DECLARE act_code CHAR(1);
BEGIN

IF DELETING THEN
  act_code := 'D';
END IF;

IF UPDATING THEN
  act_code := 'U';
END IF;
IF INSERTING THEN
  act_code := 'I';
END IF;


IF act_code = 'I' OR act_code = 'U' THEN
    INSERT INTO FDR.FR_POSTING_DRIVER_AUD(PD_AUD_ID, PD_REP_SCHEMA_UPD, PD_POSTING_DRIVER_ID, PD_POSTING_SCHEMA, PD_AET_EVENT_TYPE, PD_SUB_EVENT, PD_AMOUNT_TYPE, PD_POSTING_CODE, PD_DR_OR_CR, PD_HOPPER, PD_FIELD1, PD_FIELD2, PD_TRANSACTION_NO, PD_NEGATE_FLAG1, PD_NEGATE_FLAG2, PD_JOURNAL_TYPE,
            PD_BASE_CONVERT_FLAG, PD_LOCAL_CONVERT_FLAG, PD_COMMENT, PD_ACCOUNT_TYPE, PD_KEEP_SIGNAGE, PD_VALID_FROM, PD_VALID_TO, PD_ACTIVE, PD_ACTION, PD_INPUT_BY, PD_INPUT_TIME, PD_DELETE_TIME, PD_AUTH_BY, PD_AUTH_STATUS, PD_CLIENT_TYPE_1,
            PD_CLIENT_TYPE_2, PD_CLIENT_TYPE_3, PD_DATE_TYPE, PD_CURRENCY_TYPE, PD_BOOK_TYPE, PD_CLIENT_MAPPING_1, PD_CLIENT_MAPPING_2, PD_CLIENT_MAPPING_3, PD_RET_RECOG_TYPE_ID )
       VALUES(sqfr_posting_driver_aud.nextval, 'N',
        :NEW.PD_POSTING_DRIVER_ID, :NEW.PD_POSTING_SCHEMA, :NEW.PD_AET_EVENT_TYPE, :NEW.PD_SUB_EVENT, :NEW.PD_AMOUNT_TYPE,
        :NEW.PD_POSTING_CODE, :NEW.PD_DR_OR_CR, :NEW.PD_HOPPER, :NEW.PD_FIELD1, :NEW.PD_FIELD2, :NEW.PD_TRANSACTION_NO,
        :NEW.PD_NEGATE_FLAG1, :NEW.PD_NEGATE_FLAG2, :NEW.PD_JOURNAL_TYPE,
        :NEW.PD_BASE_CONVERT_FLAG, :NEW.PD_LOCAL_CONVERT_FLAG, :NEW.PD_COMMENT,
        :NEW.PD_ACCOUNT_TYPE, :NEW.PD_KEEP_SIGNAGE, :NEW.PD_VALID_FROM, :NEW.PD_VALID_TO, :NEW.PD_ACTIVE, act_code, 
        :NEW.PD_INPUT_BY, :NEW.PD_INPUT_TIME, :NEW.PD_DELETE_TIME, :NEW.PD_AUTH_BY, :NEW.PD_AUTH_STATUS, :NEW.PD_CLIENT_TYPE_1,
        :NEW.PD_CLIENT_TYPE_2, :NEW.PD_CLIENT_TYPE_3, :NEW.PD_DATE_TYPE, :NEW.PD_CURRENCY_TYPE, :NEW.PD_BOOK_TYPE, :NEW.PD_CLIENT_MAPPING_1, :NEW.PD_CLIENT_MAPPING_2, :NEW.PD_CLIENT_MAPPING_3, :NEW.PD_RET_RECOG_TYPE_ID);
ELSE
    INSERT INTO FDR.FR_POSTING_DRIVER_AUD(PD_AUD_ID, PD_REP_SCHEMA_UPD, PD_POSTING_DRIVER_ID, PD_POSTING_SCHEMA, PD_AET_EVENT_TYPE, PD_SUB_EVENT, PD_AMOUNT_TYPE, PD_POSTING_CODE, PD_DR_OR_CR, PD_HOPPER, PD_FIELD1, PD_FIELD2, PD_TRANSACTION_NO, PD_NEGATE_FLAG1, PD_NEGATE_FLAG2, PD_JOURNAL_TYPE,
            PD_BASE_CONVERT_FLAG, PD_LOCAL_CONVERT_FLAG, PD_COMMENT, PD_ACCOUNT_TYPE, PD_KEEP_SIGNAGE, PD_VALID_FROM, PD_VALID_TO, PD_ACTIVE, PD_ACTION, PD_INPUT_BY, PD_INPUT_TIME, PD_DELETE_TIME, PD_AUTH_BY, PD_AUTH_STATUS, PD_CLIENT_TYPE_1,
            PD_CLIENT_TYPE_2, PD_CLIENT_TYPE_3, PD_DATE_TYPE, PD_CURRENCY_TYPE, PD_BOOK_TYPE, PD_CLIENT_MAPPING_1, PD_CLIENT_MAPPING_2, PD_CLIENT_MAPPING_3, PD_RET_RECOG_TYPE_ID )
       VALUES(sqfr_posting_driver_aud.nextval, 'N',
        :OLD.PD_POSTING_DRIVER_ID, :OLD.PD_POSTING_SCHEMA, :OLD.PD_AET_EVENT_TYPE, :OLD.PD_SUB_EVENT, :OLD.PD_AMOUNT_TYPE,
        :OLD.PD_POSTING_CODE, :OLD.PD_DR_OR_CR, :OLD.PD_HOPPER, :OLD.PD_FIELD1, :OLD.PD_FIELD2, :OLD.PD_TRANSACTION_NO,
        :OLD.PD_NEGATE_FLAG1, :OLD.PD_NEGATE_FLAG2, :OLD.PD_JOURNAL_TYPE,
        :OLD.PD_BASE_CONVERT_FLAG, :OLD.PD_LOCAL_CONVERT_FLAG, :OLD.PD_COMMENT,
        :OLD.PD_ACCOUNT_TYPE, :OLD.PD_KEEP_SIGNAGE, :OLD.PD_VALID_FROM, SYSDATE, 'I', act_code,
        :OLD.PD_INPUT_BY, :OLD.PD_INPUT_TIME, :OLD.PD_DELETE_TIME, :OLD.PD_AUTH_BY, :OLD.PD_AUTH_STATUS, :OLD.PD_CLIENT_TYPE_1,
        :OLD.PD_CLIENT_TYPE_2, :OLD.PD_CLIENT_TYPE_3, :OLD.PD_DATE_TYPE, :OLD.PD_CURRENCY_TYPE, :OLD.PD_BOOK_TYPE, :OLD.PD_CLIENT_MAPPING_1, :OLD.PD_CLIENT_MAPPING_2, :OLD.PD_CLIENT_MAPPING_3, :OLD.PD_RET_RECOG_TYPE_ID);
        
END IF;

END;
/