create or replace package slr.slr_pkg as

PROCEDURE pPROCESS_SLR;

PROCEDURE pCHECK_JRNL_ERRORS(p_entity in VARCHAR2);

---------------------------------------------------------------------------------
-- Entity or entity set specifc date routines. See SLR_UTILITIES_PKG for others.
---------------------------------------------------------------------------------
PROCEDURE pROLL_ENTITY_DATE(p_entity IN VARCHAR2, p_business_date in DATE DEFAULT NULL, p_update_end_date in CHAR DEFAULT 'Y');
PROCEDURE pUPDATE_NON_WORKING_DAYS(p_entity in VARCHAR2);

---------------------------------------------------------------------------------
-- Import Procedures
---------------------------------------------------------------------------------
PROCEDURE pIMPORT_SLR_ALL_JRNLS
(
    p_entity_proc_group IN SLR_ENTITY_PROC_GROUP.epg_id%TYPE,
    p_process_id IN NUMBER
);
PROCEDURE pIMPORT_SLR_JRNLS
(
    p_entity_proc_group IN SLR_ENTITY_PROC_GROUP.epg_id%TYPE,
    p_process_id IN NUMBER
);
PROCEDURE pInsertFakEbaCombinations
(
    p_epg_id IN SLR_ENTITY_PROC_GROUP.EPG_ID%TYPE,
    p_process_id IN NUMBER,
    p_business_date SLR_ENTITIES.ENT_BUSINESS_DATE%TYPE -- IF NULL then AE is not filtered using date
);

PROCEDURE pUpdateJLU;

PROCEDURE pSLR_ENTITY_DAYS      (p_entity_set  in SLR_ENTITY_DAYS.ED_ENTITY_SET%TYPE,
                                            p_start_date  in date,
                                            p_end_date    in date,
                                            p_status      in SLR_ENTITY_DAYS.ED_STATUS%TYPE,
                                            p_calendar_name in FR_HOLIDAY_DATE.HD_CA_CALENDAR_NAME%TYPE := 'DEFAULT');

PROCEDURE pSLR_ENTITY_PERIODS;

---------------------------------------------------------------------------------
-- Static Data Loads
---------------------------------------------------------------------------------
PROCEDURE PR_ACCOUNT(p_lpg_id IN NUMBER,p_no_processed_records OUT NUMBER,p_no_failed_records OUT NUMBER);
PROCEDURE pUPDATE_SLR_CURRENCIES(pLPG_ID IN NUMBER, o_records_processed OUT NUMBER, o_records_failed OUT NUMBER);
PROCEDURE PR_FX_RATE(p_lpg_id IN NUMBER, p_no_processed_records OUT NUMBER,p_no_failed_records OUT NUMBER);
PROCEDURE pUPDATE_SLR_SEGMENT_3(pLPG_ID IN NUMBER, p_no_processed_records OUT NUMBER, p_no_failed_records OUT NUMBER);
PROCEDURE pUPDATE_SLR_SEGMENT_4(pLPG_ID IN NUMBER, p_no_processed_records OUT NUMBER, p_no_failed_records OUT NUMBER);
PROCEDURE pUPDATE_SLR_SEGMENT_5(pLPG_ID IN NUMBER, p_no_processed_records OUT NUMBER, p_no_failed_records OUT NUMBER);
PROCEDURE pUPDATE_SLR_SEGMENT_6(pLPG_ID IN NUMBER, p_no_processed_records OUT NUMBER, p_no_failed_records OUT NUMBER);
PROCEDURE pUPDATE_SLR_SEGMENT_7(pLPG_ID IN NUMBER, p_no_processed_records OUT NUMBER, p_no_failed_records OUT NUMBER);
PROCEDURE pUPDATE_SLR_SEGMENT_8(pLPG_ID IN NUMBER, p_no_processed_records OUT NUMBER, p_no_failed_records OUT NUMBER);


---------------------------------------------------------------------------------
-- Reconciliations
---------------------------------------------------------------------------------
PROCEDURE pREC_AET_JRNLS (p_epg_id IN VARCHAR2,
                            p_entity IN VARCHAR2 DEFAULT NULL,
                            p_date_from IN DATE DEFAULT NULL,
                            p_date_to IN DATE DEFAULT NULL);

PROCEDURE pSLR_INTERNAL_REC (p_epg_id IN VARCHAR2,
                            p_entity IN VARCHAR2 DEFAULT NULL,
                            p_date_from IN DATE DEFAULT NULL,
                            p_date_to IN DATE DEFAULT NULL);

procedure pCustRunBalanceMovementProcess( pProcess     IN slr_process.p_process%TYPE
                                         ,pEntProcSet  IN slr_bm_entity_processing_set.bmeps_set_id%TYPE
                                         ,pConfig      IN slr_process_config.pc_config%TYPE
                                         ,pSource      IN slr_process_source.sps_source_name%TYPE
                                         ,pBalanceDate IN DATE
                                         ,pRateSet     IN slr_entity_rates.er_entity_set%TYPE
                                        );

PROCEDURE pSLR_DAYS_PERIODS;
PROCEDURE pEVENT_CLASS_PERIODS;
PROCEDURE pGENERATE_EBA_BOP_VALUES;
PROCEDURE pGENERATE_FAK_BOP_VALUES;

PROCEDURE pYECleardown( pConfig      IN slr_process_config.pc_config%TYPE
                       ,pSource      IN slr_process_source.sps_source_name%TYPE
                       ,pBalanceDate IN DATE);

END SLR_PKG;
/